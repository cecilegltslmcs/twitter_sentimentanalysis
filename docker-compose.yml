version: '3.9'

networks:
  kafkazoo:
    driver: bridge

services:
    #zookeeper:
        #image: 'bitnami/zookeeper:latest'
        #restart: always
        #networks:
            #- kafkazoo
        #ports:
           #- "2181:2181"
        #environment:
            #- ALLOW_ANONYMOUS_LOGIN=yes 

    #kafka:
    # Verified image from Docker Hub: https://hub.docker.com/r/bitnami/kafka
        #image: 'bitnami/kafka:latest'
        #networks:
           #- kafkazoo
        #ports:
           #- "9092:9092"
        #volumes:
           #- ./kafka_components/logs:/bitnami/kafka
        #environment:
           #- KAFKA_BROKER_ID=1
           #- KAFKA_CFG_LISTENERS=PLAINTEXT://127.0.0.1:9092
           #- KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
           #- ALLOW_PLAINTEXT_LISTENER=yes
        #depends_on:
           #- zookeeper
    
    #kafka-producer-app:
        #container_name: kafka_producer
        #build: 
            #context: ./kafka_components
            #dockerfile: Dockerfile_kafka
        #networks:
           #- kafkazoo
        #depends_on:
           #- kafka

    #spark:
        #container_name: spark
        #build:
            #context: .
            #dockerfile: app/Dockerfile_app
        #depends_on:
            # - kafka

    mongodb:
    # Official image from Docker Hub: https://hub.docker.com/_/mongo 
        container_name: mongo
        image: mongo
        restart: always
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        #depends_on:
            #- spark

    streamlit:
        container_name: streamlit
        build:
            context: .
            dockerfile: dashboard/Dockerfile_dashboard
        ports:
            - 80:80
        depends_on: 
            - mongo

#volumes:
    #zookeeper_data:
        #driver: local
    #kafka_data:
        #driver: local