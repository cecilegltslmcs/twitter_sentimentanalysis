version: '3.7'

networks:
  kafkazoo:
    driver: bridge
  spark-network:
    driver: bridge

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    networks:
    - kafkazoo
    ports:
      - "2181:2181"
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    networks:
    - kafkazoo
    ports:
    - "9092:9092"
    volumes:
    - ./kafka_components/logs:/bitnami/kafka
    environment:
    - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    - KAFKA_BROKER_ID=1
    - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka:9092
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  kafka-producer-app:
    container_name: kafka_producer_app
    build:
      context: ./kafka_components
      dockerfile: Dockerfile_kafka_app
    networks:
    - kafkazoo
    ports:
      - "80:80"
    depends_on:
      - kafka
  
  # spark:
  # # Official image from Docker Hub: https://hub.docker.com/r/apache/spark-py
  #   container_name: spark
  #   image: 'apache/spark-py:latest'
  #   build:
  #     context: ./app
  #     dockerfile: Dockerfile_app
  #   networks:
  #     - kafkazoo
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - kafka

  spark-server:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
      - '7077:7077'
    networks:
      - spark-network

  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-server:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no  
    networks:
    - spark-network  

  spark-app:
    build:
      context: ./app
      dockerfile: Dockerfile_app
    networks:
      - kafkazoo
      - spark-network
    ports:
      - "8081:8081"
    depends_on:
      - kafka


  mongodb:
      # Official image from Docker Hub: https://hub.docker.com/_/mongo 
    container_name: mongodb
    image: mongo:latest
    restart: always
    ports:
    - "27017:27017"
    networks:
    - kafkazoo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    depends_on:
    - spark-app

  streamlit:
      container_name: streamlit
      build:
          context: ./dashboard
          dockerfile: Dockerfile_dashboard
      ports:
          - "8501:8501"
      networks:
      - kafkazoo
      depends_on: 
          - mongodb

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local